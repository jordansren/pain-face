{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590183408843},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js","mtime":1590165281306},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZmlsZTogbnVsbCwKICAgICAgaW1hZ2VEYXRhOiBudWxsLAogICAgICBibG9iVVJMOiBudWxsLAogICAgICBmaWxlVHlwZTogbnVsbCwKICAgICAgdXBsb2FkaW5nRmlsZTogZmFsc2UsCiAgICAgIG91dHB1dEltYWdlOiBudWxsLAogICAgICBvdXRwdXRWaWRlbzogbnVsbCwKICAgICAgd3JvbmdGaWxlVHlwZTogZmFsc2UKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uRmlsZUNob3NlbihldmVudCkgewogICAgICAvKiBMb29wIG92ZXIgZmlsZXMsIGNoZWNrIGZvciBjb3JyZWN0IGZpbGUgdHlwZXMqLwogICAgICBBcnJheQogICAgICAgIC5mcm9tKEFycmF5KGV2ZW50LnRhcmdldC5maWxlcy5sZW5ndGgpLmtleXMoKSkKICAgICAgICAubWFwKHggPT4gewogICAgICAgICAgbGV0IHRhZyA9IGV2ZW50LnRhcmdldC5maWxlc1t4XS5uYW1lLnNwbGl0KCIuIilbMV07CiAgICAgICAgICBpZiAodGFnID09ICJwbmciIHx8IHRhZyA9PSAianBlZyIgfHwgdGFnID09ICJqcGciKSB7CiAgICAgICAgICAgIC8qIFNpbmNlIHdlIGFyZSBvbmx5IGRvaW5nIHNpbmdsZSBmaWxlcyBmb3Igbm93LCB0aGlzIGlmIHN0YXRlbWVudAogICAgICAgICAgICAgICAgd2lsbCBlbnN1cmUgb25seSBvbmUgZmlsZSBpcyBzdG9yZWQgYXQgYSB0aW1lICovCiAgICAgICAgICAgIGlmICh0aGlzLmZpbGUgIT0gbnVsbCkgewogICAgICAgICAgICAgIHRoaXMuZmlsZSA9IG51bGw7CiAgICAgICAgICAgICAgdGhpcy5pbWFnZURhdGEgPSBudWxsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuc2hvd0ltYWdlKGV2ZW50LCB4KQogICAgICAgICAgICB0aGlzLndyb25nRmlsZVR5cGUgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5maWxlVHlwZSA9ICJpbWFnZSI7CiAgICAgICAgICAgIHRoaXMuZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1t4XTsKICAgICAgICAgIH0gZWxzZSBpZiAodGFnID09ICJtcDQiKSB7CiAgICAgICAgICAgIGlmICh0aGlzLmZpbGUgIT0gbnVsbCkgewogICAgICAgICAgICAgIHRoaXMuZmlsZSA9IG51bGw7CiAgICAgICAgICAgICAgdGhpcy5ibG9iVVJMID0gbnVsbDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLndyb25nRmlsZVR5cGUgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5zaG93VmlkZW8oZXZlbnQpOwogICAgICAgICAgICB0aGlzLmZpbGVUeXBlID0gInZpZGVvIjsKICAgICAgICAgICAgdGhpcy5maWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzW3hdOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy53cm9uZ0ZpbGVUeXBlID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0sCiAgICBhc3luYyBvblVwbG9hZCgpIHsKICAgICAgbGV0IHRhZyA9IHRoaXMuZmlsZS5uYW1lLnNwbGl0KCIuIilbMV07CiAgICAgIHRoaXMudXBsb2FkaW5nRmlsZSA9IHRydWU7CiAgICAgIGNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKICAgICAgaWYgKHRhZyA9PSAibXA0IikgewogICAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL3ZpZFVwbG9hZCc7IC8qIE5vdCBzdXJlIHdoYXQgdG8gcHV0IGhlcmUgKi8KICAgICAgICB0aGlzLm91dHB1dEltYWdlID0gYXdhaXQgYXhpb3MuZ2V0KHBhdGgpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2ltZ1VwbG9hZCc7IC8qIE5vdCBzdXJlIHdoYXQgdG8gcHV0IGhlcmUgKi8KICAgICAgICB0aGlzLm91dHB1dFZpZGVvID0gYXdhaXQgYXhpb3MuZ2V0KHBhdGgpOwogICAgICB9CiAgICAgIC8qIHRoaXMucmVzZXQoKTsgKi8KICAgIH0sCiAgICBzaG93SW1hZ2UoZXZlbnQpIHsKICAgICAgdmFyIGlucHV0ID0gZXZlbnQudGFyZ2V0OwogICAgICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgICByZWFkZXIub25sb2FkID0gKGUpID0+IHsKICAgICAgICAgICAgdGhpcy5pbWFnZURhdGEgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgfQogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGlucHV0LmZpbGVzWzBdKTsKICAgICAgfQogICAgfSwKICAgIHNob3dWaWRlbyhldmVudCkgewogICAgICBsZXQgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgdGhpcy5ibG9iVVJMID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTsKICAgIH0sCiAgICByZXNldCgpIHsKICAgICAgdGhpcy5maWxlID0gbnVsbDsKICAgICAgdGhpcy5pbWFnZURhdGEgPSBudWxsOwogICAgICB0aGlzLmJsb2JVUkwgPSBudWxsOwogICAgICB0aGlzLmZpbGVUeXBlID0gbnVsbDsKICAgICAgdGhpcy51cGxvYWRpbmdGaWxlID0gZmFsc2U7CiAgICAgIHRoaXMub3V0cHV0SW1hZ2UgPSBudWxsOwogICAgICB0aGlzLm91dHB1dFZpZGVvID0gbnVsbDsKICAgICAgdGhpcy53cm9uZ0ZpbGVUeXBlID0gZmFsc2U7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app id=\"app\">\n    <v-content>\n      <v-container\n        class=\"fill-height\"\n        fluid\n      >\n        <v-row\n          align=\"center\"\n          justify=\"center\"\n        >\n          <v-col\n            cols=\"12\"\n            sm=\"8\"\n            md=\"4\"\n          >\n            <v-card class=\"elevation-12\" style=\"width:500px\">\n              <h1 class=\"display-2\" style=\"text-align: center;\">AMGS Upload Tool </h1>\n              <v-img class=\"mainImage center\" src=\"./assets/Mouse.jpeg\" alt=\"Mouse\"></v-img>\n            </v-card>\n            <v-container grid-list-md></v-container>\n            <v-card class=\"elevation-12 inputcard\">\n              <v-toolbar\n                color=\"primary\"\n                dark\n                flat\n              >\n                <v-toolbar-title>Upload File</v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                      :href=\"source\"\n                      icon\n                      large\n                      target=\"_blank\"\n                      v-on=\"on\"\n                    >\n                    </v-btn>\n                  </template>\n                </v-tooltip>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn class=\"primary\" style=\"text-align: center\" @click=\"onUpload\" v-if=\"!uploadingFile\">\n                    <p style=\"top:10px\">Upload File</p>\n                  </v-btn>\n                </v-card-actions> \n              </v-toolbar>\n              <div v-if=\"!uploadingFile\">\n                <div class=\"area\">\n                  <v-img class=\"icon center\" src=\"./assets/upload.png\" alt=\"upload\"></v-img>\n                  <input id=\"upload\" type=\"file\" accept=\"image/jpeg,image/png,image/jpg,video/mp4\" @change=\"onFileChosen\">\n                </div>\n                <div class=\"preview center\">\n                  <div class=\"preview center\" v-if=\"fileType=='image'\">\n                    <img class=\"preview imageStack center\" :src=\"imageData\">\n                  </div>\n                  <video class=\"preview center\" :src=\"blobURL\" v-if=\"fileType=='video'\"></video>\n                  <p style=\"text-align: center\" v-if=\"wrongFileType\">\n                    Oops! You did not input an file of type png, jpeg, jpg, or mp4. <br> Current file to upload: {{ file.name }}\n                  </p>\n                </div>\n              </div>\n              <div v-else>\n                <div class=\"clear center\" v-if=\"uploadingFile\">\n                  <h3 style=\"text-align:center\">Processing {{ file.name }}...</h3>\n                  <v-progress-linear\n                    indeterminate\n                    color=\"green\"\n                  ></v-progress-linear>\n                </div>\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        file: null,\n        imageData: null,\n        blobURL: null,\n        fileType: null,\n        uploadingFile: false,\n        outputImage: null,\n        outputVideo: null,\n        wrongFileType: false\n      }\n    },\n    methods: {\n      onFileChosen(event) {\n        /* Loop over files, check for correct file types*/\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"png\" || tag == \"jpeg\" || tag == \"jpg\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.file != null) {\n                this.file = null;\n                this.imageData = null;\n              }\n              this.showImage(event, x)\n              this.wrongFileType = false;\n              this.fileType = \"image\";\n              this.file = event.target.files[x];\n            } else if (tag == \"mp4\") {\n              if (this.file != null) {\n                this.file = null;\n                this.blobURL = null;\n              }\n              this.wrongFileType = false;\n              this.showVideo(event);\n              this.fileType = \"video\";\n              this.file = event.target.files[x];\n            } else {\n              this.wrongFileType = true;\n            }\n          });\n      },\n      async onUpload() {\n        let tag = this.file.name.split(\".\")[1];\n        this.uploadingFile = true;\n        const axios = require('axios');\n        if (tag == \"mp4\") {\n          const path = 'http://localhost:8080/vidUpload'; /* Not sure what to put here */\n          this.outputImage = await axios.get(path);\n        } else {\n          const path = 'http://localhost:8080/imgUpload'; /* Not sure what to put here */\n          this.outputVideo = await axios.get(path);\n        }\n        /* this.reset(); */\n      },\n      showImage(event) {\n        var input = event.target;\n        if (input.files && input.files[0]) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n              this.imageData = e.target.result;\n          }\n          reader.readAsDataURL(input.files[0]);\n        }\n      },\n      showVideo(event) {\n        let file = event.target.files[0];\n        this.blobURL = URL.createObjectURL(file);\n      },\n      reset() {\n        this.file = null;\n        this.imageData = null;\n        this.blobURL = null;\n        this.fileType = null;\n        this.uploadingFile = false;\n        this.outputImage = null;\n        this.outputVideo = null;\n        this.wrongFileType = false;\n      }\n    }\n  }\n</script>\n\n<style>\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n\n\n  img.preview {\n    width: 300px;\n    background-color: white;\n    border: 1px solid #DDD;\n    padding: 5px;\n  }\n\n  .mainImage {\n    border: 1px solid rgb(119, 43, 43);\n    padding: 5px;\n    width: 150px;\n    height: 150px;\n  }\n\n  .imageStack {\n    padding: 5px;\n    display: block; \n    position: relative;\n  }\n\n  .clear {\n    clear: both;\n  }\n\n  .center {\n    display: inline-block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .area {\n    width: 100%;\n    height: 200px;\n    position: absolute;\n    border: 4px dashed #000;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 64px 64px;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    filter: alpha(opacity=50);\n    -khtml-opacity: 0.5;\n    -moz-opacity: 0.5;\n    opacity: 0.5;\n    text-align: center;\n    background-color: aqua;\n  }\n\n  .area:hover,\n  .area.dragging,\n  .area.uploading {\n      filter: alpha(opacity=100);\n      -khtml-opacity: 1;\n      -moz-opacity: 1;\n      opacity: 1;\n  }\n\n  .area input {\n    width: 500px;  \n    height: 400px;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 1;\n  }\n\n  .area input:focus {\n      outline: none;\n  }\n\n  .inputcard {\n    width: 500px;\n    height: 500px;\n  }\n\n  .preview {\n    top: 200px;\n    max-height: 200px;\n    max-width: 400px; \n    text-align: center;\n  }\n\n  .icon {\n    top: 60px;\n    width: 60px;\n    height: 60px;\n    z-index: 2;\n  }\n</style>\n"]}]}