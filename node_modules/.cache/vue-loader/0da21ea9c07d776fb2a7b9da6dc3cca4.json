{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1589915441811},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRyb3Bib3ggewogIG91dGxpbmU6IDJweCBkYXNoZWQgZ3JleTsgLyogdGhlIGRhc2ggYm94ICovCiAgb3V0bGluZS1vZmZzZXQ6IC0xMHB4OwogIGJhY2tncm91bmQ6IGxpZ2h0Y3lhbjsKICBjb2xvcjogZGltZ3JheTsKICBwYWRkaW5nOiAxMHB4IDEwcHg7CiAgbWluLWhlaWdodDogMjAwcHg7IC8qIG1pbmltdW0gaGVpZ2h0ICovCiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmlucHV0LWZpbGUgewogIG9wYWNpdHk6IDA7IC8qIGludmlzaWJsZSBidXQgaXQncyB0aGVyZSEgKi8KICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDIwMHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5kcm9wYm94OmhvdmVyIHsKICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7IC8qIHdoZW4gbW91c2Ugb3ZlciB0byB0aGUgZHJvcCB6b25lLCBjaGFuZ2UgY29sb3IgKi8KfQoKLmRyb3Bib3ggcCB7CiAgZm9udC1zaXplOiAxLjJlbTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogNTBweCAwOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <img alt=\"Vue logo\" src=\"./assets/Mouse.jpeg\">\n    <form enctype=\"multipart/form-data\" novalidate v-if=\"isInitial || isSaving\">\n      <h1>Upload images</h1>\n      <div class=\"dropbox\">\n        <input type=\"file\" multiple :name=\"uploadFieldName\" :disabled=\"isSaving\" @change=\"filesChange($event.target.name, $event.target.files); fileCount = $event.target.files.length\"\n          accept=\"image/*\" class=\"input-file\">\n          <p v-if=\"isInitial\">\n            Drag your file(s) here to begin<br> or click to browse\n          </p>\n          <p v-if=\"isSaving\">\n            Uploading {{ fileCount }} files...\n          </p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  const STATUS_INITIAL = 0, STATUS_SAVING = 1, STATUS_SUCCESS = 2, STATUS_FAILED = 3;\n\n  export default {\n    name: 'app',\n    data() {\n      return {\n        uploadedFiles: [],\n        uploadError: null,\n        currentStatus: null,\n        uploadFieldName: 'photos'\n      }\n    },\n    computed: {\n      isInitial() {\n        return this.currentStatus === STATUS_INITIAL;\n      },\n      isSaving() {\n        return this.currentStatus === STATUS_SAVING;\n      },\n      isSuccess() {\n        return this.currentStatus === STATUS_SUCCESS;\n      },\n      isFailed() {\n        return this.currentStatus === STATUS_FAILED;\n      }\n    },\n    methods: {\n      reset() {\n        // reset form to initial state\n        this.currentStatus = STATUS_INITIAL;\n        this.uploadedFiles = [];\n        this.uploadError = null;\n      },\n      filesChange(fieldName, fileList) {\n        // handle file changes\n        const formData = new FormData();\n\n        if (!fileList.length) return;\n\n        // append the files to FormData\n        Array\n          .from(Array(fileList.length).keys())\n          .map(x => {\n            formData.append(fieldName, fileList[x], fileList[x].name);\n          });\n\n        // save it\n        this.save(formData);\n      }\n    },\n    mounted() {\n      this.reset();\n    },\n  }\n\n</script>\n\n<style lang=\"scss\">\n  .dropbox {\n    outline: 2px dashed grey; /* the dash box */\n    outline-offset: -10px;\n    background: lightcyan;\n    color: dimgray;\n    padding: 10px 10px;\n    min-height: 200px; /* minimum height */\n    position: relative;\n    cursor: pointer;\n  }\n\n  .input-file {\n    opacity: 0; /* invisible but it's there! */\n    width: 100%;\n    height: 200px;\n    position: absolute;\n    cursor: pointer;\n  }\n\n  .dropbox:hover {\n    background: lightblue; /* when mouse over to the drop zone, change color */\n  }\n\n  .dropbox p {\n    font-size: 1.2em;\n    text-align: center;\n    padding: 50px 0;\n  }\n</style>\n"]}]}