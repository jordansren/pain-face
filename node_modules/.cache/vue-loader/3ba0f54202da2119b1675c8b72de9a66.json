{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590080088945},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAuc3BsaXQgewogIGhlaWdodDogMTAwJTsKICB3aWR0aDogNTAlOwogIHBvc2l0aW9uOiBmaXhlZDsKICB6LWluZGV4OiAxOwogIG92ZXJmbG93LXg6IGhpZGRlbjsKICBwYWRkaW5nLXRvcDogMjBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTQ5LCAyMTQsIDI0MCk7CiAgfSAKCi8qIENvbnRyb2wgdGhlIGxlZnQgc2lkZSAqLwoubGVmdCB7CiAgbGVmdDogMDsKICB0b3A6IDIwMDsKICB9CgoKLyogQ29udHJvbCB0aGUgcmlnaHQgc2lkZSAqLwoucmlnaHQgewogIHJpZ2h0OiAwOwogIHRvcDogMjAwOwogfQogIGJvZHl7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTQ5LCAyMTQsIDI0MCk7CiAgfQoKLmxvYWRlciB7CiAgYm9yZGVyOiAxNnB4IHNvbGlkICNmM2YzZjM7IC8qIExpZ2h0IGdyZXkgKi8KICBib3JkZXItdG9wOiAxNnB4IHNvbGlkICMzNDk4ZGI7IC8qIEJsdWUgKi8KICBib3JkZXItcmFkaXVzOiA1MCU7CiAgd2lkdGg6IDEyMHB4OwogIGhlaWdodDogMTIwcHg7CiAgYW5pbWF0aW9uOiBzcGluIDJzIGxpbmVhciBpbmZpbml0ZTsKfQoKQGtleWZyYW1lcyBzcGluIHsKICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9CiAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH0KfQoKaW1nLnByZXZpZXcgewogIHdpZHRoOiAxMDBweDsKICBoZWlnaHQ6IDcwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyOiAxcHggc29saWQgI0RERDsKICBwYWRkaW5nOiA1cHg7Cn0KCi5tYWluSW1hZ2UgewogIGJvcmRlcjogMXB4IHNvbGlkIHJnYigxMTksIDQzLCA0Myk7CiAgcGFkZGluZzogNXB4Owp9CgouaW1hZ2VTdGFjayB7CiAgcGFkZGluZzogNXB4OwogIGRpc3BsYXk6IGJsb2NrOyAKICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5jbGVhciB7CiAgY2xlYXI6IGJvdGg7Cn0KICAvKgogIGZvcm17CiAgICBtYXJnaW4tdG9wOiAtMTAwcHg7CiAgICBtYXJnaW4tbGVmdDogLTI1MHB4OwogICAgd2lkdGg6IDUwMHB4OwogICAgaGVpZ2h0OiAyMDBweDsKICAgIGJvcmRlcjogNHB4IGRhc2hlZCAjZmZmOwogIH0KICBmb3JtIHB7CiAgICBsaW5lLWhlaWdodDogMTcwcHg7CiAgICBjb2xvcjogI2ZmZmZmZjsKICAgIGZvbnQtZmFtaWx5OiBBcmlhbDsKICB9CiAgZm9ybSBpbnB1dHsKICAgIG1hcmdpbjogMDsKICAgIHBhZGRpbmc6IDA7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICAgIG91dGxpbmU6IG5vbmU7CiAgICBvcGFjaXR5OiAwOwogIH0KICBmb3JtIGJ1dHRvbnsKICAgIG1hcmdpbjogMDsKICAgIGNvbG9yOiAjZmZmOwogICAgYmFja2dyb3VuZDogIzE2YTA4NTsKICAgIGJvcmRlcjogbm9uZTsKICAgIHdpZHRoOiA1MDhweDsKICAgIGhlaWdodDogMzVweDsKICAgIG1hcmdpbi10b3A6IC0yMHB4OwogICAgbWFyZ2luLWxlZnQ6IC00cHg7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzExN0E2MDsKICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZTsKICAgIG91dGxpbmU6IG5vbmU7CiAgfQogIGZvcm0gYnV0dG9uOmhvdmVyewogICAgYmFja2dyb3VuZDogIzE0OTE3NDsKICAgIGNvbG9yOiAjMEM1NjQ1OwogIH0KICBmb3JtIGJ1dHRvbjphY3RpdmV7CiAgICBib3JkZXI6MDsKICB9ICovCiAgLmNlbnRlciB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogIH0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Title -->\n    <div>\n      <h1 style=\"text-align:center\">aMGS Image and Video Upload Tool</h1>\n      <img class=\"center mainImage\" src=\"./assets/Mouse.jpeg\">\n    </div>\n\n    <!-- Image Upload -->\n    <form class=\"split left center\">\n      <h3 style=\"text-align:center\">Images</h3>\n      <input class=\"center\" type=\"file\" accept=\"image/jpeg,image/png\" @change=\"onImageChosen\" v-if=\"!isUploadingImage\"><br>\n      <div class=\"image-preview\" v-if=\"imageData.length > 0\">\n        <div v-for=\"img in imageData\" :key=\"img\">\n          <img class=\"center preview imageStack\" :src=\"img\">\n        </div>\n      </div>\n      <button class=\"center clear\" @click=\"onImageUpload\" v-if=\"!isUploadingImage\"> \n        <p v-if=\"isMultipleImages\">Upload Images</p>\n        <p v-else>Upload Image</p>\n      </button>\n      <div class=\"center clear\" v-if=\"isUploadingImage\">\n        <h3 style=\"text-align:center\" v-if=\"isMultipleImages\">Processing Images...</h3>\n        <h3 style=\"text-align:center\" v-else>Processing Image...</h3>\n        <div class=\"center loader\"></div>\n      </div>\n    </form>\n\n    <!-- Video Upload -->\n    <form class=\"split right center\">\n      <h3 style=\"text-align:center\">Videos</h3>\n      <input class=\"center\" type=\"file\" accept=\"video/*\" @change=\"onVideoChosen\" v-if=\"!isUploadingVideo\"><br>\n<!--       <div class=\"image-preview\" v-if=\"videoData.length > 0\">\n        <div v-for=\"vid in videoData\" :key=\"vid\">\n          <img class=\"preview imageStack\" :src=\"vid\">\n        </div>\n      </div> -->\n      <button class=\"center clear\" @click=\"onVideoUpload\" v-if=\"!isUploadingVideo\">\n        <p v-if=\"isMultipleVideos\">Upload Videos</p>\n        <p v-else>Upload Video</p>\n      </button>\n      <div class=\"center clear\" v-if=\"isUploadingVideo\">\n        <h3 style=\"text-align:center\" v-if=\"isMultipleVideos\">Processing Videos...</h3>\n        <h3 style=\"text-align:center\" v-else>Processing Video...</h3>\n        <div class=\"center loader\"></div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        images: [],\n        videos: [],\n        imageData: [],\n        videoData: [],\n        uploadingImage: false,\n        uploadingVideo: false,\n        outputImage: null,\n        outputVideo: null\n      }\n    },\n    computed: {\n      isMultipleImages() {\n        return this.images.length > 1;\n      },\n      isMultipleVideos() {\n        return this.videos.length > 1;\n      },\n      isUploadingImage() {\n        return this.uploadingImage;\n      },\n      isUploadingVideo() {\n        return this.uploadingVideo;\n      },\n      numberOfImages() {\n        return this.images.length;\n      },\n      numberOfVideos() {\n        return this.videos.length;\n      }\n    },\n    methods: {\n      onImageChosen(event) {\n        /* Loop over files, check for only images */\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"png\" || tag == \"jpeg\" || tag == \"jpg\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.images.length == 1) {\n                this.images = [];\n                this.imageData = [];\n              }\n              this.showImage(event, x)\n              this.images.push(event.target.files[x]);\n            }\n          });\n      },\n      onVideoChosen(event) {\n        /* Loop over files, check for only videos */\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"mp4\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.videos.length == 1) {\n                this.videos = [];\n                this.videoData = [];\n              }\n              /* this.showVideo(event, x); */\n              this.videos.push(event.target.files[x]);\n            }\n          });\n      },\n      async onImageUpload() {\n        this.uploadingImage = true;\n        /* Something here to upload all images in this.files */\n/*         this.outputImage = await axios.post(\"./TestBackend.py\", this.images[0]);\n        console.log(this.outputImage); */\n        /*  const fd = new formData() \n            this.images.forEach(x -> {\n              fd.append(\"image\", x, x.name)\n            })\n            axios???.post(fd); (Confused here, .then???)\n            this.reset();\n                 */\n      },\n      async onVideoUpload() {\n        this.uploadingVideo = true;\n        /* Something here to upload all images in this.files */\n        /*  const fd = new formData() \n            this.videos.forEach(x -> {\n              fd.append(\"image\", x, x.name)\n            })\n            axios???.post(fd); (Confused here, .then???)\n            this.reset();\n                 */\n      },\n      showImage(event, i) {\n        var input = event.target;\n        if (input.files && input.files[i]) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n              this.imageData.push(e.target.result);\n          }\n          reader.readAsDataURL(input.files[i]);\n        }\n      },\n/*       showVideo(event, i) {\n        var input = event.target;\n        if (input.files && input.files[i]) {\n          console.log(input.files[i]);\n          var reader = new FileReader();\n          reader.onload = (e) => {\n            console.log(e.target.result);\n              this.videoData.push(e.target.result);\n          }\n          reader.readAsDataURL(input.files[i]);\n        }\n      }, */\n      reset(fileType) {\n        if (fileType == \"image\") {\n          this.images = [];\n        } \n        if (fileType == \"video\") {\n          this.videos = []; \n        }\n      }\n    }\n  }\n</script>\n\n<style>\n  .split {\n  height: 100%;\n  width: 50%;\n  position: fixed;\n  z-index: 1;\n  overflow-x: hidden;\n  padding-top: 20px;\n  background-color: rgb(149, 214, 240);\n  } \n\n/* Control the left side */\n.left {\n  left: 0;\n  top: 200;\n  }\n\n\n/* Control the right side */\n.right {\n  right: 0;\n  top: 200;\n }\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\nimg.preview {\n  width: 100px;\n  height: 70px;\n  background-color: white;\n  border: 1px solid #DDD;\n  padding: 5px;\n}\n\n.mainImage {\n  border: 1px solid rgb(119, 43, 43);\n  padding: 5px;\n}\n\n.imageStack {\n  padding: 5px;\n  display: block; \n  position: relative;\n}\n\n.clear {\n  clear: both;\n}\n  /*\n  form{\n    margin-top: -100px;\n    margin-left: -250px;\n    width: 500px;\n    height: 200px;\n    border: 4px dashed #fff;\n  }\n  form p{\n    line-height: 170px;\n    color: #ffffff;\n    font-family: Arial;\n  }\n  form input{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n  }\n  form button{\n    margin: 0;\n    color: #fff;\n    background: #16a085;\n    border: none;\n    width: 508px;\n    height: 35px;\n    margin-top: -20px;\n    margin-left: -4px;\n    border-radius: 4px;\n    border-bottom: 4px solid #117A60;\n    transition: all .2s ease;\n    outline: none;\n  }\n  form button:hover{\n    background: #149174;\n    color: #0C5645;\n  }\n  form button:active{\n    border:0;\n  } */\n  .center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>"]}]}