{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590075071813},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgLnNwbGl0IHsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDUwJTsKICBwb3NpdGlvbjogZml4ZWQ7CiAgei1pbmRleDogMTsKICBvdmVyZmxvdy14OiBoaWRkZW47CiAgcGFkZGluZy10b3A6IDIwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE0OSwgMjE0LCAyNDApOwogIH0gCgovKiBDb250cm9sIHRoZSBsZWZ0IHNpZGUgKi8KLmxlZnQgewogIGxlZnQ6IDA7CiAgdG9wOiAyMDA7CiAgfQoKCi8qIENvbnRyb2wgdGhlIHJpZ2h0IHNpZGUgKi8KLnJpZ2h0IHsKICByaWdodDogMDsKICB0b3A6IDIwMDsKIH0KICBib2R5ewogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE0OSwgMjE0LCAyNDApOwogIH0KCi5sb2FkZXIgewogIGJvcmRlcjogMTZweCBzb2xpZCAjZjNmM2YzOyAvKiBMaWdodCBncmV5ICovCiAgYm9yZGVyLXRvcDogMTZweCBzb2xpZCAjMzQ5OGRiOyAvKiBCbHVlICovCiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHdpZHRoOiAxMjBweDsKICBoZWlnaHQ6IDEyMHB4OwogIGFuaW1hdGlvbjogc3BpbiAycyBsaW5lYXIgaW5maW5pdGU7Cn0KCkBrZXlmcmFtZXMgc3BpbiB7CiAgMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfQogIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9Cn0KCmltZy5wcmV2aWV3IHsKICB3aWR0aDogMTAwcHg7CiAgaGVpZ2h0OiA3MHB4OwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIGJvcmRlcjogMXB4IHNvbGlkICNEREQ7CiAgcGFkZGluZzogNXB4Owp9CgoubWFpbkltYWdlIHsKICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTE5LCA0MywgNDMpOwogIHBhZGRpbmc6IDVweDsKfQoKLmltYWdlU3RhY2sgewogIGZsb2F0OiBsZWZ0OwogIHBhZGRpbmc6IDVweDsKICBkaXNwbGF5OiBibG9jazsgCiAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgouY2xlYXIgewogIGNsZWFyOiBib3RoOwp9CiAgLyoKICBmb3JtewogICAgbWFyZ2luLXRvcDogLTEwMHB4OwogICAgbWFyZ2luLWxlZnQ6IC0yNTBweDsKICAgIHdpZHRoOiA1MDBweDsKICAgIGhlaWdodDogMjAwcHg7CiAgICBib3JkZXI6IDRweCBkYXNoZWQgI2ZmZjsKICB9CiAgZm9ybSBwewogICAgbGluZS1oZWlnaHQ6IDE3MHB4OwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBmb250LWZhbWlseTogQXJpYWw7CiAgfQogIGZvcm0gaW5wdXR7CiAgICBtYXJnaW46IDA7CiAgICBwYWRkaW5nOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBvdXRsaW5lOiBub25lOwogICAgb3BhY2l0eTogMDsKICB9CiAgZm9ybSBidXR0b257CiAgICBtYXJnaW46IDA7CiAgICBjb2xvcjogI2ZmZjsKICAgIGJhY2tncm91bmQ6ICMxNmEwODU7CiAgICBib3JkZXI6IG5vbmU7CiAgICB3aWR0aDogNTA4cHg7CiAgICBoZWlnaHQ6IDM1cHg7CiAgICBtYXJnaW4tdG9wOiAtMjBweDsKICAgIG1hcmdpbi1sZWZ0OiAtNHB4OwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICMxMTdBNjA7CiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2U7CiAgICBvdXRsaW5lOiBub25lOwogIH0KICBmb3JtIGJ1dHRvbjpob3ZlcnsKICAgIGJhY2tncm91bmQ6ICMxNDkxNzQ7CiAgICBjb2xvcjogIzBDNTY0NTsKICB9CiAgZm9ybSBidXR0b246YWN0aXZlewogICAgYm9yZGVyOjA7CiAgfSAqLwogIC5jZW50ZXIgewogICAgZGlzcGxheTogYmxvY2s7CiAgICBtYXJnaW4tbGVmdDogYXV0bzsKICAgIG1hcmdpbi1yaWdodDogYXV0bzsKICB9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- Title -->\n    <div>\n      <h1 style=\"text-align:center\">aMGS Image and Video Upload Tool</h1>\n      <img class=\"center mainImage\" src=\"./assets/Mouse.jpeg\">\n    </div>\n\n    <!-- Image Upload -->\n    <form class=\"split left center\">\n      <h3 style=\"text-align:center\">Images</h3>\n      <input class=\"center\" type=\"file\" accept=\"image/*\" @change=\"onImageChosen\" v-if=\"!isUploadingImage\" <!-- multiple -->><br>\n      <div class=\"image-preview\" v-if=\"imageData.length > 0\">\n        <div v-for=\"img in imageData\" :key=\"img\">\n          <img class=\"preview imageStack\" :src=\"img\">\n        </div>\n      </div>\n      <button class=\"center clear\" @click=\"onImageUpload\" v-if=\"!isUploadingImage\"> \n        <p v-if=\"isMultipleImages\">Upload Images</p>\n        <p v-else>Upload Image</p>\n      </button>\n      <div class=\"center clear\" v-if=\"isUploadingImage\">\n        <h3 style=\"text-align:center\" v-if=\"isMultipleImages\">Processing Images...</h3>\n        <h3 style=\"text-align:center\" v-else>Processing Image...</h3>\n        <div class=\"center loader\"></div>\n      </div>\n    </form>\n\n    <!-- Video Upload -->\n    <form class=\"split right center\">\n      <h3 style=\"text-align:center\">Videos</h3>\n      <input class=\"center\" type=\"file\" accept=\"video/*\" @change=\"onVideoChosen\" v-if=\"!isUploadingVideo\" <!-- multiple -->><br>\n<!--       <div class=\"image-preview\" v-if=\"videoData.length > 0\">\n        <div v-for=\"vid in videoData\" :key=\"vid\">\n          <img class=\"preview imageStack\" :src=\"vid\">\n        </div>\n      </div> -->\n      <button class=\"center clear\" @click=\"onVideoUpload\" v-if=\"!isUploadingVideo\">\n        <p v-if=\"isMultipleVideos\">Upload Videos</p>\n        <p v-else>Upload Video</p>\n      </button>\n      <div class=\"center clear\" v-if=\"isUploadingVideo\">\n        <h3 style=\"text-align:center\" v-if=\"isMultipleVideos\">Processing Videos...</h3>\n        <h3 style=\"text-align:center\" v-else>Processing Video...</h3>\n        <div class=\"center loader\"></div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        images: [],\n        videos: [],\n        imageData: [],\n        videoData: [],\n        uploadingImage: false,\n        uploadingVideo: false,\n        output: null\n      }\n    },\n    computed: {\n      isMultipleImages() {\n        console.log(this.images.length);\n        return this.images.length > 1;\n      },\n      isMultipleVideos() {\n        return this.videos.length > 1;\n      },\n      isUploadingImage() {\n        return this.uploadingImage;\n      },\n      isUploadingVideo() {\n        return this.uploadingVideo;\n      },\n      numberOfImages() {\n        return this.images.length;\n      },\n      numberOfVideos() {\n        return this.videos.length;\n      }\n    },\n    methods: {\n      onImageChosen(event) {\n        /* Loop over files, check for only videos */\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            this.showImage(event, x)\n            this.images.push(event.target.files[x]);\n          });\n      },\n      onVideoChosen(event) {\n        /* Loop over files, check for only videos */\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            /* this.showVideo(event, x); */\n            this.videos.push(event.target.files[x]);\n          });\n      },\n      onImageUpload() {\n        this.uploadingImage = true;\n        /* Something here to upload all images in this.files */\n        /*  const fd = new formData() \n            this.images.forEach(x -> {\n              fd.append(\"image\", x, x.name)\n            })\n            axios???.post(fd); (Confused here, .then???)\n            this.reset();\n                 */\n      },\n      onVideoUpload() {\n        this.uploadingVideo = true;\n        /* Something here to upload all images in this.files */\n        /*  const fd = new formData() \n            this.videos.forEach(x -> {\n              fd.append(\"image\", x, x.name)\n            })\n            axios???.post(fd); (Confused here, .then???)\n            this.reset();\n                 */\n      },\n      showImage(event, i) {\n        var input = event.target;\n        if (input.files && input.files[i]) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n              this.imageData.push(e.target.result);\n          }\n          reader.readAsDataURL(input.files[i]);\n        }\n      },\n/*       showVideo(event, i) {\n        var input = event.target;\n        if (input.files && input.files[i]) {\n          console.log(input.files[i]);\n          var reader = new FileReader();\n          reader.onload = (e) => {\n            console.log(e.target.result);\n              this.videoData.push(e.target.result);\n          }\n          reader.readAsDataURL(input.files[i]);\n        }\n      }, */\n      reset(fileType) {\n        if (fileType == \"image\") {\n          this.images = [];\n        } \n        if (fileType == \"video\") {\n          this.videos = []; \n        }\n      }\n    }\n  }\n</script>\n\n<style>\n  .split {\n  height: 100%;\n  width: 50%;\n  position: fixed;\n  z-index: 1;\n  overflow-x: hidden;\n  padding-top: 20px;\n  background-color: rgb(149, 214, 240);\n  } \n\n/* Control the left side */\n.left {\n  left: 0;\n  top: 200;\n  }\n\n\n/* Control the right side */\n.right {\n  right: 0;\n  top: 200;\n }\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n\n.loader {\n  border: 16px solid #f3f3f3; /* Light grey */\n  border-top: 16px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  animation: spin 2s linear infinite;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\nimg.preview {\n  width: 100px;\n  height: 70px;\n  background-color: white;\n  border: 1px solid #DDD;\n  padding: 5px;\n}\n\n.mainImage {\n  border: 1px solid rgb(119, 43, 43);\n  padding: 5px;\n}\n\n.imageStack {\n  float: left;\n  padding: 5px;\n  display: block; \n  position: relative;\n}\n\n.clear {\n  clear: both;\n}\n  /*\n  form{\n    margin-top: -100px;\n    margin-left: -250px;\n    width: 500px;\n    height: 200px;\n    border: 4px dashed #fff;\n  }\n  form p{\n    line-height: 170px;\n    color: #ffffff;\n    font-family: Arial;\n  }\n  form input{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n  }\n  form button{\n    margin: 0;\n    color: #fff;\n    background: #16a085;\n    border: none;\n    width: 508px;\n    height: 35px;\n    margin-top: -20px;\n    margin-left: -4px;\n    border-radius: 4px;\n    border-bottom: 4px solid #117A60;\n    transition: all .2s ease;\n    outline: none;\n  }\n  form button:hover{\n    background: #149174;\n    color: #0C5645;\n  }\n  form button:active{\n    border:0;\n  } */\n  .center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>"]}]}