{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590515377755},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/css-loader/dist/cjs.js","mtime":1590515358075},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1590515358999},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/postcss-loader/src/index.js","mtime":1590515358579},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":1590515357931},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":1590515358999}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFyZWEgewogIHdpZHRoOiA1MDBweDsKICBoZWlnaHQ6IDIwMHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3JkZXI6IDRweCBkYXNoZWQgIzAwMDsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsKICBiYWNrZ3JvdW5kLXNpemU6IDY0cHggNjRweDsKICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTUwKTsKICAta2h0bWwtb3BhY2l0eTogMC41OwogIC1tb3otb3BhY2l0eTogMC41OwogIG9wYWNpdHk6IDAuNTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7Cn0KCi5hcmVhOmhvdmVyLAouYXJlYS5kcmFnZ2luZywKLmFyZWEudXBsb2FkaW5nIHsKICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT0xMDApOwogICAgLWtodG1sLW9wYWNpdHk6IDE7CiAgICAtbW96LW9wYWNpdHk6IDE7CiAgICBvcGFjaXR5OiAxOwp9CgouYXJlYSBpbnB1dCB7CiAgd2lkdGg6IDUwMHB4OyAgCiAgaGVpZ2h0OiAyMDBweDsKICBib3JkZXI6IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwogIG9wYWNpdHk6IDA7CiAgei1pbmRleDogMzsKfQoKLmFyZWEgaW5wdXQ6Zm9jdXMgewogICAgb3V0bGluZTogbm9uZTsKfQoKYm9keXsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTQ5LCAyMTQsIDI0MCk7Cn0KCi5jbGVhciB7CiAgY2xlYXI6IGJvdGg7Cn0KCi5jZW50ZXIgewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsKfQoKLmljb24gewogIHRvcDogLTE0NXB4OwogIHdpZHRoOiA2MHB4OwogIGhlaWdodDogNjBweDsKICB6LWluZGV4OiAyOwp9CgouaW5wdXRjYXJkIHsKICB3aWR0aDogNTAwcHg7CiAgaGVpZ2h0OiA1MDBweDsKfQoKLmxvYWRpbmdjYXJkIHsKICB3aWR0aDogNTAwcHg7CiAgaGVpZ2h0OiA1MHB4Owp9CgoubWFpbkltYWdlIHsKICBwYWRkaW5nOiA1cHg7CiAgd2lkdGg6IDE1MHB4OwogIGhlaWdodDogMTUwcHg7Cn0KCi5wcmV2aWV3IHsKICBwYWRkaW5nOiAycHg7CiAgZGlzcGxheTogYmxvY2s7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyAKICBtYXgtaGVpZ2h0OiAxOTBweDsKICBtYXgtd2lkdGg6IDQwMHB4OyAKfQoKLnByZXZpZXdlcnJvciB7CiAgcGFkZGluZzogMnB4OwogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogYXV0bzsgCiAgbWF4LWhlaWdodDogMTUwcHg7CiAgbWF4LXdpZHRoOiA0MDBweDsKfQoKLnNtYWxsaW5wdXRjYXJkIHsKICB3aWR0aDogNTAwcHg7CiAgaGVpZ2h0OiAyNjRweDsKfQoKLndpdGhwcmV2aWV3IHsKICB0b3A6IDMwMHB4Owp9Cgo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app id=\"app\">\n    <v-content>\n      <v-container\n        class=\"fill-height\"\n        fluid\n      >\n        <v-row\n          align=\"center\"\n          justify=\"center\"\n        >\n          <v-col\n            cols=\"12\"\n            sm=\"8\"\n            md=\"4\"\n          >\n            <v-card class=\"elevation-12\" style=\"width:500px\">\n              <h1 class=\"display-2\" style=\"text-align: center;\">AMGS Upload Tool </h1>\n              <v-img class=\"mainImage center\" src=\"./assets/Mouse.jpeg\" alt=\"Mouse\"></v-img>\n            </v-card>\n            <v-container grid-list-md></v-container>\n            <v-card class=\"elevation-12\" v-bind:class=\"{\n              inputcard: displayInputCard == 2, \n              smallinputcard: displayInputCard == 3,\n              loadingCard: displayInputCard == 1}\"\n              style=\"max-width: 500px;\">\n\n              <!-- Tool Bar -->\n              <v-toolbar color=\"primary\" dark flat>\n                <v-toolbar-title v-if=\"stage == 1\">Accepted File Types: <br> jpg, png, jpeg, mp4</v-toolbar-title>\n                <v-toolbar-title v-if=\"stage == 2\">Uploading...</v-toolbar-title>\n                <v-toolbar-title v-if=\"stage == 3\">Finished</v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn rounded class=\"info\" @click=\"onUpload\" v-if=\"stage == 1\">\n                    Upload File\n                  </v-btn>\n                  <v-btn rounded class=\"info\" @click=\"reset\" v-if=\"stage == 3\">\n                    Upload Another File\n                  </v-btn>\n                </v-card-actions> \n              </v-toolbar>\n\n              <!-- Image Upload -->\n              <div v-if=\"stage == 1\">\n                <div v-bind:class=\"{ area: true, withpreview: displayInputCard == 2}\">\n                  <input id=\"upload\" type=\"file\" accept=\"image/jpeg,image/png,image/jpg,video/mp4\" @change=\"onFileChosen\">\n                  <v-img class=\"icon center\" src=\"./assets/upload.png\" alt=\"upload\"></v-img>\n                  <p style=\"position:relative; top:-140px; z-index: 2;\">Click or Drag to Choose Files</p>\n                </div>\n                <div>\n                  <p style=\"text-align: center\" v-if=\"wrongFileType\">\n                    Oops! You did not input an file of type png, jpeg, jpg, or mp4. <br> Current file to upload: {{ file.name }}\n                  </p>\n                  <p style=\"text-align: center\" v-else-if=\"fileType != null\">\n                    Preview:\n                  </p>\n                  <img :class=\"{preview: !wrongFileType, previewerror: wrongFileType}\" :src=\"imageData\" v-if=\"fileType=='image'\">\n                  <video :class=\"{preview: !wrongFileType, previewerror: wrongFileType}\" :src=\"blobURL\" v-if=\"fileType=='video'\"></video>\n                </div>\n              </div>\n\n              <!-- Uploading Image -->\n              <div class=\"clear center\" v-else-if=\"stage == 2\">\n                <h3 style=\"text-align:center\">Processing {{ file.name }}...</h3>\n                <v-progress-linear\n                  indeterminate\n                  color=\"green\"\n                ></v-progress-linear>\n              </div>\n\n              <!-- Return Processed Data -->\n              <div v-if=\"stage == 3\">\n                <div v-if=\"fileType=='image'\">\n                  <img class=\"preview\" :src=\"imageData\">\n                </div>\n                <video class=\"preview\" :src=\"blobURL\" v-if=\"fileType=='video'\"></video>\n                <h1 v-if=\"fileType == 'image'\" :img=\"outputImage\" style=\"text-align: center;\">\n                  Mouse Face Pain Score: <br> {{ img }}\n                </h1>\n                <h1 v-if=\"fileType == 'video'\" :vid=\"outputVideo\" style=\"text-align: center\">\n                  Mouse Face Pain Score: <br> {{ vid }}\n                </h1>\n              </div>\n\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        file: null,\n        imageData: \"\",\n        blobURL: \"\",\n        fileType: null,\n        uploadingFile: false,\n        finishedUpload: false,\n        outputImage: null,\n        outputVideo: null,\n        wrongFileType: false\n      }\n    },\n    computed: {\n      stage() {\n        if (!this.uploadingFile && !this.finishedUpload) {\n          return 1;\n        } else if (this.uploadingFile && !this.finishedUpload) {\n          return 2;\n        } else {\n          return 3;\n        }\n      },\n      displayInputCard() {\n        if (this.uploadingFile && !this.finishedUpload) {\n          return 1;\n        }\n        if (this.fileType!=null || this.wrongFileType) {\n          return 2;\n        } else {\n          return 3;\n        }\n      } \n    },\n    methods: {\n      onFileChosen(event) {\n        let tag = event.target.files[0].name.split(\".\")[1];\n        if (tag == \"png\" || tag == \"jpeg\" || tag == \"jpg\" || tag == \"mp4\") {\n          if (this.file != null) {\n            this.file = null;\n            this.imageData = null;\n            this.blobURL = null;\n          }\n          this.wrongFileType = false;\n          this.file = event.target.files[0];\n          if(tag == \"mp4\") {\n            this.showVideo(event);\n            this.fileType = \"video\";\n          } else {\n            this.showImage(event)\n            this.fileType = \"image\";\n          }\n        } else {\n          this.wrongFileType = true;  \n        }\n      },\n      async onUpload() {\n        if (this.file == null) {\n          return;\n        }\n        this.uploadingFile = true;\n/*         let tag = this.file.name.split(\".\")[1];\n        const axios = require('axios');\n        if (tag == \"mp4\") {\n          const path = 'http://127.0.0.1:8000/vid-upload';\n          this.outputImage = await axios.get(path);\n        } else {\n          const path = 'http://127.0.0.1:8000/img-upload';\n          this.outputVideo = await axios.get(path);\n        }\n        console.log(this.outputImage); */\n        this.finishedUpload = true;\n        this.uploadingFile = false;\n      },\n      showImage(event) {\n        var input = event.target;\n        var reader = new FileReader();\n        reader.onload = (e) => {\n            this.imageData = e.target.result;\n        }\n        reader.readAsDataURL(input.files[0]);\n      },\n      showVideo(event) {\n        let file = event.target.files[0];\n        this.blobURL = URL.createObjectURL(file);\n      },\n      reset() {\n        this.file = null;\n        this.imageData = null;\n        this.blobURL = null;\n        this.fileType = null;\n        this.finishedUpload = false;\n        this.uploadingFile = false;\n        this.outputImage = null;\n        this.outputVideo = null;\n        this.wrongFileType = false;\n      }\n    }\n  }\n</script>\n\n<style>\n  .area {\n    width: 500px;\n    height: 200px;\n    position: absolute;\n    border: 4px dashed #000;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 64px 64px;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    filter: alpha(opacity=50);\n    -khtml-opacity: 0.5;\n    -moz-opacity: 0.5;\n    opacity: 0.5;\n    text-align: center;\n    background-color: white;\n  }\n\n  .area:hover,\n  .area.dragging,\n  .area.uploading {\n      filter: alpha(opacity=100);\n      -khtml-opacity: 1;\n      -moz-opacity: 1;\n      opacity: 1;\n  }\n\n  .area input {\n    width: 500px;  \n    height: 200px;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 3;\n  }\n\n  .area input:focus {\n      outline: none;\n  }\n\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n\n  .clear {\n    clear: both;\n  }\n\n  .center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .icon {\n    top: -145px;\n    width: 60px;\n    height: 60px;\n    z-index: 2;\n  }\n\n  .inputcard {\n    width: 500px;\n    height: 500px;\n  }\n\n  .loadingcard {\n    width: 500px;\n    height: 50px;\n  }\n\n  .mainImage {\n    padding: 5px;\n    width: 150px;\n    height: 150px;\n  }\n\n  .preview {\n    padding: 2px;\n    display: block;\n    margin-left: auto;\n    margin-right: auto; \n    max-height: 190px;\n    max-width: 400px; \n  }\n\n  .previewerror {\n    padding: 2px;\n    display: block;\n    margin-left: auto;\n    margin-right: auto; \n    max-height: 150px;\n    max-width: 400px;\n  }\n\n  .smallinputcard {\n    width: 500px;\n    height: 264px;\n  }\n\n  .withpreview {\n    top: 300px;\n  }\n\n</style>\n"]}]}