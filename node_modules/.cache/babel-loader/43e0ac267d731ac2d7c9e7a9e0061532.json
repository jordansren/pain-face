{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js!/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590185191756},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js","mtime":1590165281306},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2pvcmRhbi5yZW4vRG9jdW1lbnRzL2FtZ3MtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiBudWxsLAogICAgICBpbWFnZURhdGE6IG51bGwsCiAgICAgIGJsb2JVUkw6IG51bGwsCiAgICAgIGZpbGVUeXBlOiBudWxsLAogICAgICB1cGxvYWRpbmdGaWxlOiBmYWxzZSwKICAgICAgZmluaXNoZWRVcGxvYWQ6IGZhbHNlLAogICAgICBvdXRwdXRJbWFnZTogbnVsbCwKICAgICAgb3V0cHV0VmlkZW86IG51bGwsCiAgICAgIHdyb25nRmlsZVR5cGU6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHN0YWdlOiBmdW5jdGlvbiBzdGFnZSgpIHsKICAgICAgaWYgKCF0aGlzLnVwbG9hZGluZ2ZpbGUgJiYgIXRoaXMuZmluaXNoZWRVcGxvYWQpIHsKICAgICAgICByZXR1cm4gMTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnVwbG9hZGluZ0ZpbGUgJiYgIXRoaXMuZmluaXNoZWRVcGxvYWQpIHsKICAgICAgICByZXR1cm4gMjsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gMzsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25GaWxlQ2hvc2VuOiBmdW5jdGlvbiBvbkZpbGVDaG9zZW4oZXZlbnQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8qIExvb3Agb3ZlciBmaWxlcywgY2hlY2sgZm9yIGNvcnJlY3QgZmlsZSB0eXBlcyovCiAgICAgIEFycmF5LmZyb20oQXJyYXkoZXZlbnQudGFyZ2V0LmZpbGVzLmxlbmd0aCkua2V5cygpKS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICB2YXIgdGFnID0gZXZlbnQudGFyZ2V0LmZpbGVzW3hdLm5hbWUuc3BsaXQoIi4iKVsxXTsKCiAgICAgICAgaWYgKHRhZyA9PSAicG5nIiB8fCB0YWcgPT0gImpwZWciIHx8IHRhZyA9PSAianBnIikgewogICAgICAgICAgLyogU2luY2Ugd2UgYXJlIG9ubHkgZG9pbmcgc2luZ2xlIGZpbGVzIGZvciBub3csIHRoaXMgaWYgc3RhdGVtZW50CiAgICAgICAgICAgICAgd2lsbCBlbnN1cmUgb25seSBvbmUgZmlsZSBpcyBzdG9yZWQgYXQgYSB0aW1lICovCiAgICAgICAgICBpZiAoX3RoaXMuZmlsZSAhPSBudWxsKSB7CiAgICAgICAgICAgIF90aGlzLmZpbGUgPSBudWxsOwogICAgICAgICAgICBfdGhpcy5pbWFnZURhdGEgPSBudWxsOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLnNob3dJbWFnZShldmVudCwgeCk7CgogICAgICAgICAgX3RoaXMud3JvbmdGaWxlVHlwZSA9IGZhbHNlOwogICAgICAgICAgX3RoaXMuZmlsZVR5cGUgPSAiaW1hZ2UiOwogICAgICAgICAgX3RoaXMuZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1t4XTsKICAgICAgICB9IGVsc2UgaWYgKHRhZyA9PSAibXA0IikgewogICAgICAgICAgaWYgKF90aGlzLmZpbGUgIT0gbnVsbCkgewogICAgICAgICAgICBfdGhpcy5maWxlID0gbnVsbDsKICAgICAgICAgICAgX3RoaXMuYmxvYlVSTCA9IG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMud3JvbmdGaWxlVHlwZSA9IGZhbHNlOwoKICAgICAgICAgIF90aGlzLnNob3dWaWRlbyhldmVudCk7CgogICAgICAgICAgX3RoaXMuZmlsZVR5cGUgPSAidmlkZW8iOwogICAgICAgICAgX3RoaXMuZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1t4XTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMud3JvbmdGaWxlVHlwZSA9IHRydWU7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBvblVwbG9hZDogZnVuY3Rpb24gb25VcGxvYWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIudXBsb2FkaW5nRmlsZSA9IHRydWU7CiAgICAgICAgICAgICAgICAvKiAgICAgICAgIGxldCB0YWcgPSB0aGlzLmZpbGUubmFtZS5zcGxpdCgiLiIpWzFdOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YWcgPT0gIm1wNCIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC92aWRVcGxvYWQnOwogICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub3V0cHV0SW1hZ2UgPSBhd2FpdCBheGlvcy5nZXQocGF0aCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9ICdodHRwOi8vbG9jYWxob3N0OjgwODAvaW1nVXBsb2FkJzsKICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm91dHB1dFZpZGVvID0gYXdhaXQgYXhpb3MuZ2V0KHBhdGgpOwogICAgICAgICAgICAgICAgICAgICAgICB9ICovCgogICAgICAgICAgICAgICAgX3RoaXMyLmZpbmlzaGVkVXBsb2FkID0gdHJ1ZTsKICAgICAgICAgICAgICAgIF90aGlzMi51cGxvYWRpbmdGaWxlID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBzaG93SW1hZ2U6IGZ1bmN0aW9uIHNob3dJbWFnZShldmVudCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBpbnB1dCA9IGV2ZW50LnRhcmdldDsKCiAgICAgIGlmIChpbnB1dC5maWxlcyAmJiBpbnB1dC5maWxlc1swXSkgewogICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwoKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIF90aGlzMy5pbWFnZURhdGEgPSBlLnRhcmdldC5yZXN1bHQ7CiAgICAgICAgfTsKCiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoaW5wdXQuZmlsZXNbMF0pOwogICAgICB9CiAgICB9LAogICAgc2hvd1ZpZGVvOiBmdW5jdGlvbiBzaG93VmlkZW8oZXZlbnQpIHsKICAgICAgdmFyIGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIHRoaXMuYmxvYlVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLmZpbGUgPSBudWxsOwogICAgICB0aGlzLmltYWdlRGF0YSA9IG51bGw7CiAgICAgIHRoaXMuYmxvYlVSTCA9IG51bGw7CiAgICAgIHRoaXMuZmlsZVR5cGUgPSBudWxsOwogICAgICB0aGlzLnVwbG9hZGluZ0ZpbGUgPSBmYWxzZTsKICAgICAgdGhpcy5vdXRwdXRJbWFnZSA9IG51bGw7CiAgICAgIHRoaXMub3V0cHV0VmlkZW8gPSBudWxsOwogICAgICB0aGlzLndyb25nRmlsZVR5cGUgPSBmYWxzZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA,MAAA,aAAA,EAAA,KALA;AAMA,MAAA,cAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA,IAPA;AAQA,MAAA,WAAA,EAAA,IARA;AASA,MAAA,aAAA,EAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,CAAA,KAAA,aAAA,IAAA,CAAA,KAAA,cAAA,EAAA;AACA,eAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,aAAA,IAAA,CAAA,KAAA,cAAA,EAAA;AACA,eAAA,CAAA;AACA,OAFA,MAEA;AACA,eAAA,CAAA;AACA;AACA;AATA,GAdA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AAAA;;AACA;AACA,MAAA,KAAA,CACA,IADA,CACA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EADA,EAEA,GAFA,CAEA,UAAA,CAAA,EAAA;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;;AACA,YAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,MAAA,IAAA,GAAA,IAAA,KAAA,EAAA;AACA;;AAEA,cAAA,KAAA,CAAA,IAAA,IAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,YAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA;;AACA,UAAA,KAAA,CAAA,SAAA,CAAA,KAAA,EAAA,CAAA;;AACA,UAAA,KAAA,CAAA,aAAA,GAAA,KAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,OAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,SAXA,MAWA,IAAA,GAAA,IAAA,KAAA,EAAA;AACA,cAAA,KAAA,CAAA,IAAA,IAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA;;AACA,UAAA,KAAA,CAAA,aAAA,GAAA,KAAA;;AACA,UAAA,KAAA,CAAA,SAAA,CAAA,KAAA;;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,OAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,SATA,MASA;AACA,UAAA,KAAA,CAAA,aAAA,GAAA,IAAA;AACA;AACA,OA3BA;AA4BA,KA/BA;AAgCA,IAAA,QAhCA,sBAgCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AACA;;;;;;;;;;AASA,gBAAA,MAAA,CAAA,cAAA,GAAA,IAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KA7CA;AA8CA,IAAA,SA9CA,qBA8CA,KA9CA,EA8CA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,CAAA,MAAA;;AACA,UAAA,KAAA,CAAA,KAAA,IAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,SAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AACA,SAFA;;AAGA,QAAA,MAAA,CAAA,aAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA,KAvDA;AAwDA,IAAA,SAxDA,qBAwDA,KAxDA,EAwDA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,OAAA,GAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AACA,KA3DA;AA4DA,IAAA,KA5DA,mBA4DA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,aAAA,GAAA,KAAA;AACA;AArEA;AAzBA,CAAA","sourcesContent":["<template>\n  <v-app id=\"app\">\n    <v-content>\n      <v-container\n        class=\"fill-height\"\n        fluid\n      >\n        <v-row\n          align=\"center\"\n          justify=\"center\"\n        >\n          <v-col\n            cols=\"12\"\n            sm=\"8\"\n            md=\"4\"\n          >\n            <v-card class=\"elevation-12\" style=\"width:500px\">\n              <h1 class=\"display-2\" style=\"text-align: center;\">AMGS Upload Tool </h1>\n              <v-img class=\"mainImage center\" src=\"./assets/Mouse.jpeg\" alt=\"Mouse\"></v-img>\n            </v-card>\n            <v-container grid-list-md></v-container>\n            <v-card class=\"elevation-12 inputcard\">\n              <v-toolbar\n                color=\"primary\"\n                dark\n                flat\n              >\n                <v-toolbar-title>Accepted File Types: <br> jpg, png, jpeg, mp4</v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn rounded class=\"info\" style=\"text-align: center\" @click=\"onUpload\" v-if=\"stage == 1\">\n                    <p style=\"top:20px\">Upload File</p>\n                  </v-btn>\n                </v-card-actions> \n              </v-toolbar>\n              <div v-if=\"stage == 1\">\n                <div class=\"area\">\n                  <v-img class=\"icon center\" src=\"./assets/upload.png\" alt=\"upload\"></v-img>\n                  <input id=\"upload\" type=\"file\" accept=\"image/jpeg,image/png,image/jpg,video/mp4\" @change=\"onFileChosen\">\n                </div>\n                <div>\n                  <div class=\"preview\" v-if=\"fileType=='image'\">\n                    <img class=\"preview imageStack\" :src=\"imageData\">\n                  </div>\n                  <video class=\"preview imageStack\" :src=\"blobURL\" v-if=\"fileType=='video'\"></video>\n                  <p style=\"text-align: center\" v-if=\"wrongFileType\">\n                    Oops! You did not input an file of type png, jpeg, jpg, or mp4. <br> Current file to upload: {{ file.name }}\n                  </p>\n                </div>\n              </div>\n              <div v-else>\n                <div class=\"clear center\" v-if=\"stage == 2\">\n                  <h3 style=\"text-align:center\">Processing {{ file.name }}...</h3>\n                  <v-progress-linear\n                    indeterminate\n                    color=\"green\"\n                  ></v-progress-linear>\n                </div>\n              </div>\n              <div v-if=\"stage == 3\">\n                <div v-if=\"fileType=='image'\">\n                  <img class=\"imageStack processedpreview center\" :src=\"imageData\">\n                </div>\n                <video class=\"imageStack processedpreview center\" :src=\"blobURL\" v-if=\"fileType=='video'\"></video>\n                <h1 v-if=\"fileType == 'image'\" :img=\"outputImage\">\n                  Here is the data you want {{ img }}\n                </h1>\n                <h1 v-if=\"fileType == 'video'\" :vid=\"outputVideo\">\n                  Here is the data you want {{ vid }}\n                </h1>\n                <v-btn rounded class=\"info center\" @click=\"reset\">\n                  <p style=\"top:20px\">Upload File</p>\n                </v-btn>\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        file: null,\n        imageData: null,\n        blobURL: null,\n        fileType: null,\n        uploadingFile: false,\n        finishedUpload: false,\n        outputImage: null,\n        outputVideo: null,\n        wrongFileType: false\n      }\n    },\n    computed: {\n      stage() {\n        if (!this.uploadingfile && !this.finishedUpload) {\n          return 1;\n        } else if (this.uploadingFile && !this.finishedUpload) {\n          return 2;\n        } else {\n          return 3;\n        }\n      }\n    },\n    methods: {\n      onFileChosen(event) {\n        /* Loop over files, check for correct file types*/\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"png\" || tag == \"jpeg\" || tag == \"jpg\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.file != null) {\n                this.file = null;\n                this.imageData = null;\n              }\n              this.showImage(event, x)\n              this.wrongFileType = false;\n              this.fileType = \"image\";\n              this.file = event.target.files[x];\n            } else if (tag == \"mp4\") {\n              if (this.file != null) {\n                this.file = null;\n                this.blobURL = null;\n              }\n              this.wrongFileType = false;\n              this.showVideo(event);\n              this.fileType = \"video\";\n              this.file = event.target.files[x];\n            } else {\n              this.wrongFileType = true;\n            }\n          });\n      },\n      async onUpload() {\n        this.uploadingFile = true;\n/*         let tag = this.file.name.split(\".\")[1];\n        const axios = require('axios');\n        if (tag == \"mp4\") {\n          const path = 'http://localhost:8080/vidUpload';\n          this.outputImage = await axios.get(path);\n        } else {\n          const path = 'http://localhost:8080/imgUpload';\n          this.outputVideo = await axios.get(path);\n        } */\n        this.finishedUpload = true;\n        this.uploadingFile = false;\n      },\n      showImage(event) {\n        var input = event.target;\n        if (input.files && input.files[0]) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n              this.imageData = e.target.result;\n          }\n          reader.readAsDataURL(input.files[0]);\n        }\n      },\n      showVideo(event) {\n        let file = event.target.files[0];\n        this.blobURL = URL.createObjectURL(file);\n      },\n      reset() {\n        this.file = null;\n        this.imageData = null;\n        this.blobURL = null;\n        this.fileType = null;\n        this.uploadingFile = false;\n        this.outputImage = null;\n        this.outputVideo = null;\n        this.wrongFileType = false;\n      }\n    }\n  }\n</script>\n\n<style>\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n\n\n  img.preview {\n    max-width: 400px;\n    max-height: 200px;\n    background-color: white;\n    border: 1px solid #DDD;\n    padding: 5px;\n  }\n\n  .mainImage {\n    padding: 5px;\n    width: 150px;\n    height: 150px;\n  }\n\n  .imageStack {\n    padding: 5px;\n    display: block; \n    position: relative;\n  }\n\n  .clear {\n    clear: both;\n  }\n\n  .center {\n    display: inline-block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .area {\n    width: 100%;\n    height: 200px;\n    position: absolute;\n    border: 4px dashed #000;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 64px 64px;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    filter: alpha(opacity=50);\n    -khtml-opacity: 0.5;\n    -moz-opacity: 0.5;\n    opacity: 0.5;\n    text-align: center;\n    background-color: aqua;\n  }\n\n  .area:hover,\n  .area.dragging,\n  .area.uploading {\n      filter: alpha(opacity=100);\n      -khtml-opacity: 1;\n      -moz-opacity: 1;\n      opacity: 1;\n  }\n\n  .area input {\n    width: 500px;  \n    height: 200px;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 1;\n  }\n\n  .area input:focus {\n      outline: none;\n  }\n\n  .inputcard {\n    width: 500px;\n    height: 500px;\n  }\n\n  .preview {\n    top: 200px;\n    max-height: 200px;\n    max-width: 400px; \n  }\n\n  .processedpreview {\n    max-height: 300px;\n    max-width: 480px; \n  }\n\n  .icon {\n    top: 60px;\n    width: 60px;\n    height: 60px;\n    z-index: 2;\n  }\n</style>\n"],"sourceRoot":"src"}]}