{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js!/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590174372686},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js","mtime":1590165281306},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2pvcmRhbi5yZW4vRG9jdW1lbnRzL2FtZ3MtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWFnZXM6IFtdLAogICAgICB2aWRlb3M6IFtdLAogICAgICBpbWFnZURhdGE6IFtdLAogICAgICB1cGxvYWRpbmdJbWFnZTogZmFsc2UsCiAgICAgIHVwbG9hZGluZ1ZpZGVvOiBmYWxzZSwKICAgICAgb3V0cHV0SW1hZ2U6IG51bGwsCiAgICAgIG91dHB1dFZpZGVvOiBudWxsLAogICAgICB3cm9uZ0ltYWdlVHlwZTogZmFsc2UsCiAgICAgIHdyb25nVmlkZW9UeXBlOiBmYWxzZSwKICAgICAgYmxvYlVSTDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBudW1iZXJPZkltYWdlczogZnVuY3Rpb24gbnVtYmVyT2ZJbWFnZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLmltYWdlcy5sZW5ndGg7CiAgICB9LAogICAgbnVtYmVyT2ZWaWRlb3M6IGZ1bmN0aW9uIG51bWJlck9mVmlkZW9zKCkgewogICAgICByZXR1cm4gdGhpcy52aWRlb3MubGVuZ3RoOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25JbWFnZUNob3NlbjogZnVuY3Rpb24gb25JbWFnZUNob3NlbihldmVudCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLyogTG9vcCBvdmVyIGZpbGVzLCBjaGVjayBmb3Igb25seSBpbWFnZXMgKi8KICAgICAgQXJyYXkuZnJvbShBcnJheShldmVudC50YXJnZXQuZmlsZXMubGVuZ3RoKS5rZXlzKCkpLm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgIHZhciB0YWcgPSBldmVudC50YXJnZXQuZmlsZXNbeF0ubmFtZS5zcGxpdCgiLiIpWzFdOwoKICAgICAgICBpZiAodGFnID09ICJwbmciIHx8IHRhZyA9PSAianBlZyIgfHwgdGFnID09ICJqcGciKSB7CiAgICAgICAgICAvKiBTaW5jZSB3ZSBhcmUgb25seSBkb2luZyBzaW5nbGUgZmlsZXMgZm9yIG5vdywgdGhpcyBpZiBzdGF0ZW1lbnQKICAgICAgICAgICAgICB3aWxsIGVuc3VyZSBvbmx5IG9uZSBmaWxlIGlzIHN0b3JlZCBhdCBhIHRpbWUgKi8KICAgICAgICAgIGlmIChfdGhpcy5pbWFnZXMubGVuZ3RoID09IDEpIHsKICAgICAgICAgICAgX3RoaXMuaW1hZ2VzID0gW107CiAgICAgICAgICAgIF90aGlzLmltYWdlRGF0YSA9IFtdOwogICAgICAgICAgICBfdGhpcy53cm9uZ0ltYWdlVHlwZSA9IGZhbHNlOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLnNob3dJbWFnZShldmVudCwgeCk7CgogICAgICAgICAgX3RoaXMuaW1hZ2VzLnB1c2goZXZlbnQudGFyZ2V0LmZpbGVzW3hdKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMud3JvbmdJbWFnZVR5cGUgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgb25WaWRlb0Nob3NlbjogZnVuY3Rpb24gb25WaWRlb0Nob3NlbihldmVudCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIC8qIExvb3Agb3ZlciBmaWxlcywgY2hlY2sgZm9yIG9ubHkgdmlkZW9zICovCiAgICAgIEFycmF5LmZyb20oQXJyYXkoZXZlbnQudGFyZ2V0LmZpbGVzLmxlbmd0aCkua2V5cygpKS5tYXAoZnVuY3Rpb24gKHgpIHsKICAgICAgICB2YXIgdGFnID0gZXZlbnQudGFyZ2V0LmZpbGVzW3hdLm5hbWUuc3BsaXQoIi4iKVsxXTsKCiAgICAgICAgaWYgKHRhZyA9PSAibXA0IikgewogICAgICAgICAgLyogU2luY2Ugd2UgYXJlIG9ubHkgZG9pbmcgc2luZ2xlIGZpbGVzIGZvciBub3csIHRoaXMgaWYgc3RhdGVtZW50CiAgICAgICAgICAgICAgd2lsbCBlbnN1cmUgb25seSBvbmUgZmlsZSBpcyBzdG9yZWQgYXQgYSB0aW1lICovCiAgICAgICAgICBpZiAoX3RoaXMyLnZpZGVvcy5sZW5ndGggPT0gMSkgewogICAgICAgICAgICBfdGhpczIudmlkZW9zID0gW107CiAgICAgICAgICAgIF90aGlzMi52aWRlb0RhdGEgPSBbXTsKICAgICAgICAgICAgX3RoaXMyLndyb25nVmlkZW9UeXBlID0gZmFsc2U7CiAgICAgICAgICB9CgogICAgICAgICAgX3RoaXMyLnNob3dWaWRlbyhldmVudCk7CgogICAgICAgICAgX3RoaXMyLnZpZGVvcy5wdXNoKGV2ZW50LnRhcmdldC5maWxlc1t4XSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi53cm9uZ1ZpZGVvVHlwZSA9IHRydWU7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBvbkltYWdlVXBsb2FkOiBmdW5jdGlvbiBvbkltYWdlVXBsb2FkKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGF4aW9zLCBwYXRoOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMy51cGxvYWRpbmdJbWFnZSA9IHRydWU7CiAgICAgICAgICAgICAgICBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7CiAgICAgICAgICAgICAgICBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8nOwogICAgICAgICAgICAgICAgLyogTm90IHN1cmUgd2hhdCB0byBwdXQgaGVyZSAqLwoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwYXRoKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3RoaXMzLm91dHB1dEltYWdlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uVmlkZW9VcGxvYWQ6IGZ1bmN0aW9uIG9uVmlkZW9VcGxvYWQoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGF4aW9zLCBwYXRoOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczQudXBsb2FkaW5nVmlkZW8gPSB0cnVlOwogICAgICAgICAgICAgICAgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwogICAgICAgICAgICAgICAgcGF0aCA9ICdodHRwOi8vbG9jYWxob3N0OjgwODAvJzsKICAgICAgICAgICAgICAgIC8qIE5vdCBzdXJlIHdoYXQgdG8gcHV0IGhlcmUgKi8KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHBhdGgpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBfdGhpczQub3V0cHV0VmlkZW8gPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2hvd0ltYWdlOiBmdW5jdGlvbiBzaG93SW1hZ2UoZXZlbnQsIGkpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB2YXIgaW5wdXQgPSBldmVudC50YXJnZXQ7CgogICAgICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbaV0pIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBfdGhpczUuaW1hZ2VEYXRhLnB1c2goZS50YXJnZXQucmVzdWx0KTsKICAgICAgICB9OwoKICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1tpXSk7CiAgICAgIH0KICAgIH0sCiAgICBzaG93VmlkZW86IGZ1bmN0aW9uIHNob3dWaWRlbyhldmVudCkgewogICAgICB2YXIgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgICAgdGhpcy5ibG9iVVJMID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTsKICAgIH0sCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoZmlsZVR5cGUpIHsKICAgICAgaWYgKGZpbGVUeXBlID09ICJpbWFnZSIpIHsKICAgICAgICB0aGlzLmltYWdlcyA9IFtdOwogICAgICB9CgogICAgICBpZiAoZmlsZVR5cGUgPT0gInZpZGVvIikgewogICAgICAgIHRoaXMudmlkZW9zID0gW107CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app id=\"app\">\n    <!-- Title -->\n    <v-container>\n      <v-layout row wrap>\n        <v-flex xs6 md4>\n          <h1 class=\"display-2\">aMGS <br> Upload Tool </h1>\n        </v-flex>\n        <v-flex xs6 md8>\n          <v-img class=\"mainImage\" src=\"./assets/Mouse.jpeg\" alt=\"Mouse\"></v-img>\n        </v-flex>\n      </v-layout>\n      <v-divider></v-divider>\n      <!-- Main Content and Uploader -->\n      <v-layout row wrap>\n        <!-- Drag and drop area -->\n        <v-layout column>\n          <v-flex xs6 md3 class=\"area\">\n            <label>\n              <h3>Click or Drag to choose file</h3>\n            </label>\n            <v-img class=\"icon center\" src=\"./assets/upload.png\" alt=\"upload\"></v-img>\n            <input id=\"upload\" type=\"file\" accept=\"image/jpeg,image/png\" @change=\"onImageChosen\">\n          </v-flex>\n        </v-layout>\n        <!-- Preview and upload -->\n        <v-layout column>\n          <v-flex xs6 md9>\n            <p v-if=\"wrongImageType\">\n              Oops! You did not input an image of type png, jpeg, or jpg. <br> Current file to upload: {{ images[0].name }}\n            </p>\n            <v-btn class=\"primary\" @click=\"onImageUpload\" v-if=\"!uploadingImage\">\n              <p v-if=\"numberOfImages > 1\">Upload Images</p>\n              <p v-else>Upload Image</p>\n            </v-btn>\n          </v-flex>\n          <v-flex xs6 md9>\n            <div class=\"image-preview\" v-if=\"imageData.length > 0\">\n              <div v-for=\"img in imageData\" :key=\"img\">\n                <img class=\"preview imageStack\" :src=\"img\">\n              </div>\n            </div>\n          </v-flex>\n          <div class=\"clear\" v-if=\"uploadingImage\">\n            <h3 v-if=\"numberOfImages > 1\">Processing {{ images[0].name }}...</h3>\n            <h3 v-else>Processing {{ images[0].name }}...</h3>\n            <div class=\"loader\"></div>\n          </div>\n        </v-layout>\n      </v-layout>\n    </v-container>\n  \n    <!-- Video Upload -->\n    <!-- <form>\n      <h3 >Videos</h3>\n      <input type=\"file\" accept=\"video/*\" @change=\"onVideoChosen\" v-if=\"!uploadingVideo\"><br>\n      <p v-if=\"wrongVideoType\">\n        Oops! You did not input an image of type png, jpeg, or jpg. <br> Current file to upload: {{ videos[0].name }}\n      </p>\n      <video style=\"width:300px\" :src=\"blobURL\" v-if=\"numberOfVideos > 0\"></video>\n      <button class=\"clear\" @click=\"onVideoUpload\" v-if=\"!uploadingVideo\">\n        <p v-if=\"numberOfVideos > 1\">Upload Videos</p>\n        <p v-else>Upload Video</p>\n      </button>\n      <div class=\"clear\" v-if=\"uploadingVideo\">\n        <h3 v-if=\"numberOfVideos > 1\">Processing {{ videos[0].name }}...</h3>\n        <h3 v-else>Processing {{ videos[0].name }}...</h3>\n        <div class=\"loader\"></div>\n      </div>\n    </form> -->\n  </v-app>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        images: [],\n        videos: [],\n        imageData: [],\n        uploadingImage: false,\n        uploadingVideo: false,\n        outputImage: null,\n        outputVideo: null,\n        wrongImageType: false,\n        wrongVideoType: false,\n        blobURL: null\n      }\n    },\n    computed: {\n      numberOfImages() {\n        return this.images.length;\n      },\n      numberOfVideos() {\n        return this.videos.length;\n      }\n    },\n    methods: {\n      onImageChosen(event) {\n        /* Loop over files, check for only images */\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"png\" || tag == \"jpeg\" || tag == \"jpg\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.images.length == 1) {\n                this.images = [];\n                this.imageData = [];\n                this.wrongImageType = false;\n              }\n              this.showImage(event, x)\n              this.images.push(event.target.files[x]);\n            } else {\n              this.wrongImageType = true;\n            }\n          });\n      },\n      onVideoChosen(event) {\n        /* Loop over files, check for only videos */\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"mp4\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.videos.length == 1) {\n                this.videos = [];\n                this.videoData = [];\n                this.wrongVideoType = false;\n              } \n              this.showVideo(event);\n              this.videos.push(event.target.files[x]);\n            } else {\n              this.wrongVideoType = true;\n            }\n          });\n      },\n      async onImageUpload() {\n        this.uploadingImage = true;\n        const axios = require('axios');\n        const path = 'http://localhost:8080/'; /* Not sure what to put here */\n        this.outputImage = await axios.get(path);\n        /* this.uploadingImage = false; */\n      },\n      async onVideoUpload() {\n        this.uploadingVideo = true;\n        const axios = require('axios');\n        const path = 'http://localhost:8080/'; /* Not sure what to put here */\n        this.outputVideo = await axios.get(path);\n        /* this.uploadingVideo = false; */\n      },\n      showImage(event, i) {\n        var input = event.target;\n        if (input.files && input.files[i]) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n              this.imageData.push(e.target.result);\n          }\n          reader.readAsDataURL(input.files[i]);\n        }\n      },\n      showVideo(event) {\n        let file = event.target.files[0];\n        this.blobURL = URL.createObjectURL(file);\n      },\n      reset(fileType) {\n        if (fileType == \"image\") {\n          this.images = [];\n        } \n        if (fileType == \"video\") {\n          this.videos = []; \n        }\n      }\n    }\n  }\n</script>\n\n<style>\n  .split {\n    height: 100%;\n    width: 50%;\n    position: fixed;\n    z-index: 1;\n    top: 200;\n    overflow-x: hidden;\n    padding-top: 20px;\n    background-color: rgb(149, 214, 240);\n  } \n\n  .left {\n    left: 0;\n    top: 200;\n    }\n\n  .right {\n    right: 0;\n    top: 200;\n  }\n    body{\n      background-color: rgb(149, 214, 240);\n    }\n\n  .loader {\n    border: 16px solid #f3f3f3; /* Light grey */\n    border-top: 16px solid #3498db; /* Blue */\n    border-radius: 50%;\n    width: 120px;\n    height: 120px;\n    animation: spin 2s linear infinite;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n\n  img.preview {\n    width: 300px;\n    background-color: white;\n    border: 1px solid #DDD;\n    padding: 5px;\n  }\n\n  .mainImage {\n    border: 1px solid rgb(119, 43, 43);\n    padding: 5px;\n    width: 150px;\n    height: 150px;\n  }\n\n  .imageStack {\n    padding: 5px;\n    display: block; \n    position: relative;\n  }\n\n  .clear {\n    clear: both;\n  }\n\n  .center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .area {\n    width: 20%;\n    height: 20%;\n    position: absolute;\n    border: 4px dashed #000;\n    background-image: url(\"http://kmtlondon.com/img/upload.png\");\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 64px 64px;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    filter: alpha(opacity=50);\n    -khtml-opacity: 0.5;\n    -moz-opacity: 0.5;\n    opacity: 0.5;\n    text-align: center;\n  }\n\n  .area:hover,\n  .area.dragging,\n  .area.uploading {\n      filter: alpha(opacity=100);\n      -khtml-opacity: 1;\n      -moz-opacity: 1;\n      opacity: 1;\n  }\n\n  .area input {\n    width: 400%;\n    height: 100%;\n    margin-left: -300%;\n    border: none;\n    cursor: pointer;\n  }\n\n  .area input:focus {\n      outline: none;\n  }\n\n  .icon {\n    top: 25px;\n    width: 40px;\n    height: 40px;\n  }\n</style>\n"],"sourceRoot":"src"}]}