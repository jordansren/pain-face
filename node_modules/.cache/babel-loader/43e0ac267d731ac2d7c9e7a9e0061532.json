{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js!/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1590183408843},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vuetify-loader/lib/loader.js","mtime":1590165281306},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2pvcmRhbi5yZW4vRG9jdW1lbnRzL2FtZ3MtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlOiBudWxsLAogICAgICBpbWFnZURhdGE6IG51bGwsCiAgICAgIGJsb2JVUkw6IG51bGwsCiAgICAgIGZpbGVUeXBlOiBudWxsLAogICAgICB1cGxvYWRpbmdGaWxlOiBmYWxzZSwKICAgICAgb3V0cHV0SW1hZ2U6IG51bGwsCiAgICAgIG91dHB1dFZpZGVvOiBudWxsLAogICAgICB3cm9uZ0ZpbGVUeXBlOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uRmlsZUNob3NlbjogZnVuY3Rpb24gb25GaWxlQ2hvc2VuKGV2ZW50KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvKiBMb29wIG92ZXIgZmlsZXMsIGNoZWNrIGZvciBjb3JyZWN0IGZpbGUgdHlwZXMqLwogICAgICBBcnJheS5mcm9tKEFycmF5KGV2ZW50LnRhcmdldC5maWxlcy5sZW5ndGgpLmtleXMoKSkubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgdmFyIHRhZyA9IGV2ZW50LnRhcmdldC5maWxlc1t4XS5uYW1lLnNwbGl0KCIuIilbMV07CgogICAgICAgIGlmICh0YWcgPT0gInBuZyIgfHwgdGFnID09ICJqcGVnIiB8fCB0YWcgPT0gImpwZyIpIHsKICAgICAgICAgIC8qIFNpbmNlIHdlIGFyZSBvbmx5IGRvaW5nIHNpbmdsZSBmaWxlcyBmb3Igbm93LCB0aGlzIGlmIHN0YXRlbWVudAogICAgICAgICAgICAgIHdpbGwgZW5zdXJlIG9ubHkgb25lIGZpbGUgaXMgc3RvcmVkIGF0IGEgdGltZSAqLwogICAgICAgICAgaWYgKF90aGlzLmZpbGUgIT0gbnVsbCkgewogICAgICAgICAgICBfdGhpcy5maWxlID0gbnVsbDsKICAgICAgICAgICAgX3RoaXMuaW1hZ2VEYXRhID0gbnVsbDsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpcy5zaG93SW1hZ2UoZXZlbnQsIHgpOwoKICAgICAgICAgIF90aGlzLndyb25nRmlsZVR5cGUgPSBmYWxzZTsKICAgICAgICAgIF90aGlzLmZpbGVUeXBlID0gImltYWdlIjsKICAgICAgICAgIF90aGlzLmZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbeF07CiAgICAgICAgfSBlbHNlIGlmICh0YWcgPT0gIm1wNCIpIHsKICAgICAgICAgIGlmIChfdGhpcy5maWxlICE9IG51bGwpIHsKICAgICAgICAgICAgX3RoaXMuZmlsZSA9IG51bGw7CiAgICAgICAgICAgIF90aGlzLmJsb2JVUkwgPSBudWxsOwogICAgICAgICAgfQoKICAgICAgICAgIF90aGlzLndyb25nRmlsZVR5cGUgPSBmYWxzZTsKCiAgICAgICAgICBfdGhpcy5zaG93VmlkZW8oZXZlbnQpOwoKICAgICAgICAgIF90aGlzLmZpbGVUeXBlID0gInZpZGVvIjsKICAgICAgICAgIF90aGlzLmZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbeF07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLndyb25nRmlsZVR5cGUgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgb25VcGxvYWQ6IGZ1bmN0aW9uIG9uVXBsb2FkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHRhZywgYXhpb3MsIHBhdGgsIF9wYXRoOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICB0YWcgPSBfdGhpczIuZmlsZS5uYW1lLnNwbGl0KCIuIilbMV07CiAgICAgICAgICAgICAgICBfdGhpczIudXBsb2FkaW5nRmlsZSA9IHRydWU7CiAgICAgICAgICAgICAgICBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7CgogICAgICAgICAgICAgICAgaWYgKCEodGFnID09ICJtcDQiKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL3ZpZFVwbG9hZCc7CiAgICAgICAgICAgICAgICAvKiBOb3Qgc3VyZSB3aGF0IHRvIHB1dCBoZXJlICovCgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHBhdGgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpczIub3V0cHV0SW1hZ2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfcGF0aCA9ICdodHRwOi8vbG9jYWxob3N0OjgwODAvaW1nVXBsb2FkJzsKICAgICAgICAgICAgICAgIC8qIE5vdCBzdXJlIHdoYXQgdG8gcHV0IGhlcmUgKi8KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KF9wYXRoKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIF90aGlzMi5vdXRwdXRWaWRlbyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2hvd0ltYWdlOiBmdW5jdGlvbiBzaG93SW1hZ2UoZXZlbnQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgaW5wdXQgPSBldmVudC50YXJnZXQ7CgogICAgICBpZiAoaW5wdXQuZmlsZXMgJiYgaW5wdXQuZmlsZXNbMF0pIHsKICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBfdGhpczMuaW1hZ2VEYXRhID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgIH07CgogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGlucHV0LmZpbGVzWzBdKTsKICAgICAgfQogICAgfSwKICAgIHNob3dWaWRlbzogZnVuY3Rpb24gc2hvd1ZpZGVvKGV2ZW50KSB7CiAgICAgIHZhciBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgICB0aGlzLmJsb2JVUkwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpOwogICAgfSwKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgdGhpcy5maWxlID0gbnVsbDsKICAgICAgdGhpcy5pbWFnZURhdGEgPSBudWxsOwogICAgICB0aGlzLmJsb2JVUkwgPSBudWxsOwogICAgICB0aGlzLmZpbGVUeXBlID0gbnVsbDsKICAgICAgdGhpcy51cGxvYWRpbmdGaWxlID0gZmFsc2U7CiAgICAgIHRoaXMub3V0cHV0SW1hZ2UgPSBudWxsOwogICAgICB0aGlzLm91dHB1dFZpZGVvID0gbnVsbDsKICAgICAgdGhpcy53cm9uZ0ZpbGVUeXBlID0gZmFsc2U7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app id=\"app\">\n    <v-content>\n      <v-container\n        class=\"fill-height\"\n        fluid\n      >\n        <v-row\n          align=\"center\"\n          justify=\"center\"\n        >\n          <v-col\n            cols=\"12\"\n            sm=\"8\"\n            md=\"4\"\n          >\n            <v-card class=\"elevation-12\" style=\"width:500px\">\n              <h1 class=\"display-2\" style=\"text-align: center;\">AMGS Upload Tool </h1>\n              <v-img class=\"mainImage center\" src=\"./assets/Mouse.jpeg\" alt=\"Mouse\"></v-img>\n            </v-card>\n            <v-container grid-list-md></v-container>\n            <v-card class=\"elevation-12 inputcard\">\n              <v-toolbar\n                color=\"primary\"\n                dark\n                flat\n              >\n                <v-toolbar-title>Upload File</v-toolbar-title>\n                <v-spacer></v-spacer>\n                <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                      :href=\"source\"\n                      icon\n                      large\n                      target=\"_blank\"\n                      v-on=\"on\"\n                    >\n                    </v-btn>\n                  </template>\n                </v-tooltip>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn class=\"primary\" style=\"text-align: center\" @click=\"onUpload\" v-if=\"!uploadingFile\">\n                    <p style=\"top:10px\">Upload File</p>\n                  </v-btn>\n                </v-card-actions> \n              </v-toolbar>\n              <div v-if=\"!uploadingFile\">\n                <div class=\"area\">\n                  <v-img class=\"icon center\" src=\"./assets/upload.png\" alt=\"upload\"></v-img>\n                  <input id=\"upload\" type=\"file\" accept=\"image/jpeg,image/png,image/jpg,video/mp4\" @change=\"onFileChosen\">\n                </div>\n                <div class=\"preview center\">\n                  <div class=\"preview center\" v-if=\"fileType=='image'\">\n                    <img class=\"preview imageStack center\" :src=\"imageData\">\n                  </div>\n                  <video class=\"preview center\" :src=\"blobURL\" v-if=\"fileType=='video'\"></video>\n                  <p style=\"text-align: center\" v-if=\"wrongFileType\">\n                    Oops! You did not input an file of type png, jpeg, jpg, or mp4. <br> Current file to upload: {{ file.name }}\n                  </p>\n                </div>\n              </div>\n              <div v-else>\n                <div class=\"clear center\" v-if=\"uploadingFile\">\n                  <h3 style=\"text-align:center\">Processing {{ file.name }}...</h3>\n                  <v-progress-linear\n                    indeterminate\n                    color=\"green\"\n                  ></v-progress-linear>\n                </div>\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        file: null,\n        imageData: null,\n        blobURL: null,\n        fileType: null,\n        uploadingFile: false,\n        outputImage: null,\n        outputVideo: null,\n        wrongFileType: false\n      }\n    },\n    methods: {\n      onFileChosen(event) {\n        /* Loop over files, check for correct file types*/\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            let tag = event.target.files[x].name.split(\".\")[1];\n            if (tag == \"png\" || tag == \"jpeg\" || tag == \"jpg\") {\n              /* Since we are only doing single files for now, this if statement\n                  will ensure only one file is stored at a time */\n              if (this.file != null) {\n                this.file = null;\n                this.imageData = null;\n              }\n              this.showImage(event, x)\n              this.wrongFileType = false;\n              this.fileType = \"image\";\n              this.file = event.target.files[x];\n            } else if (tag == \"mp4\") {\n              if (this.file != null) {\n                this.file = null;\n                this.blobURL = null;\n              }\n              this.wrongFileType = false;\n              this.showVideo(event);\n              this.fileType = \"video\";\n              this.file = event.target.files[x];\n            } else {\n              this.wrongFileType = true;\n            }\n          });\n      },\n      async onUpload() {\n        let tag = this.file.name.split(\".\")[1];\n        this.uploadingFile = true;\n        const axios = require('axios');\n        if (tag == \"mp4\") {\n          const path = 'http://localhost:8080/vidUpload'; /* Not sure what to put here */\n          this.outputImage = await axios.get(path);\n        } else {\n          const path = 'http://localhost:8080/imgUpload'; /* Not sure what to put here */\n          this.outputVideo = await axios.get(path);\n        }\n        /* this.reset(); */\n      },\n      showImage(event) {\n        var input = event.target;\n        if (input.files && input.files[0]) {\n          var reader = new FileReader();\n          reader.onload = (e) => {\n              this.imageData = e.target.result;\n          }\n          reader.readAsDataURL(input.files[0]);\n        }\n      },\n      showVideo(event) {\n        let file = event.target.files[0];\n        this.blobURL = URL.createObjectURL(file);\n      },\n      reset() {\n        this.file = null;\n        this.imageData = null;\n        this.blobURL = null;\n        this.fileType = null;\n        this.uploadingFile = false;\n        this.outputImage = null;\n        this.outputVideo = null;\n        this.wrongFileType = false;\n      }\n    }\n  }\n</script>\n\n<style>\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n\n\n  img.preview {\n    width: 300px;\n    background-color: white;\n    border: 1px solid #DDD;\n    padding: 5px;\n  }\n\n  .mainImage {\n    border: 1px solid rgb(119, 43, 43);\n    padding: 5px;\n    width: 150px;\n    height: 150px;\n  }\n\n  .imageStack {\n    padding: 5px;\n    display: block; \n    position: relative;\n  }\n\n  .clear {\n    clear: both;\n  }\n\n  .center {\n    display: inline-block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .area {\n    width: 100%;\n    height: 200px;\n    position: absolute;\n    border: 4px dashed #000;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 64px 64px;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    filter: alpha(opacity=50);\n    -khtml-opacity: 0.5;\n    -moz-opacity: 0.5;\n    opacity: 0.5;\n    text-align: center;\n    background-color: aqua;\n  }\n\n  .area:hover,\n  .area.dragging,\n  .area.uploading {\n      filter: alpha(opacity=100);\n      -khtml-opacity: 1;\n      -moz-opacity: 1;\n      opacity: 1;\n  }\n\n  .area input {\n    width: 500px;  \n    height: 400px;\n    border: none;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 1;\n  }\n\n  .area input:focus {\n      outline: none;\n  }\n\n  .inputcard {\n    width: 500px;\n    height: 500px;\n  }\n\n  .preview {\n    top: 200px;\n    max-height: 200px;\n    max-width: 400px; \n    text-align: center;\n  }\n\n  .icon {\n    top: 60px;\n    width: 60px;\n    height: 60px;\n    z-index: 2;\n  }\n</style>\n"],"sourceRoot":"src"}]}