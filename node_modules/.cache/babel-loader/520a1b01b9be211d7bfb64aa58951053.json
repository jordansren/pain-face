{"remainingRequest":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js!/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jordan.ren/Documents/amgs-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jordan.ren/Documents/amgs-app/src/App.vue","mtime":1589923165839},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jordan.ren/Documents/amgs-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWFnZXM6IFtdLAogICAgICB2aWRlb3M6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzTXVsdGlwbGVJbWFnZXM6IGZ1bmN0aW9uIGlzTXVsdGlwbGVJbWFnZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLmltYWdlcy5sZW5ndGggPiAxOwogICAgfSwKICAgIGlzTXVsdGlwbGVWaWRlb3M6IGZ1bmN0aW9uIGlzTXVsdGlwbGVWaWRlb3MoKSB7CiAgICAgIHJldHVybiB0aGlzLnZpZGVvcy5sZW5ndGggPiAxOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25JbWFnZUNob3NlbjogZnVuY3Rpb24gb25JbWFnZUNob3NlbihldmVudCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgQXJyYXkuZnJvbShBcnJheShldmVudC50YXJnZXQuZmlsZXMubGVuZ3RoKS5rZXlzKCkpLm1hcChmdW5jdGlvbiAoeCkgewogICAgICAgIF90aGlzLmltYWdlcy5wdXNoKGV2ZW50LnRhcmdldC5maWxlc1t4XSk7CiAgICAgIH0pOwogICAgfSwKICAgIG9uVmlkZW9DaG9zZW46IGZ1bmN0aW9uIG9uVmlkZW9DaG9zZW4oZXZlbnQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBBcnJheS5mcm9tKEFycmF5KGV2ZW50LnRhcmdldC5maWxlcy5sZW5ndGgpLmtleXMoKSkubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgX3RoaXMyLnZpZGVvcy5wdXNoKGV2ZW50LnRhcmdldC5maWxlc1t4XSk7CiAgICAgIH0pOwogICAgfSwKICAgIG9uSW1hZ2VVcGxvYWQ6IGZ1bmN0aW9uIG9uSW1hZ2VVcGxvYWQoKSB7CiAgICAgIC8qIFNvbWV0aGluZyBoZXJlIHRvIHVwbG9hZCBhbGwgaW1hZ2VzIGluIHRoaXMuZmlsZXMgKi8KCiAgICAgIC8qICBjb25zdCBmZCA9IG5ldyBmb3JtRGF0YSgpIAogICAgICAgICAgdGhpcy5pbWFnZXMuZm9yRWFjaCh4IC0+IHsKICAgICAgICAgICAgZmQuYXBwZW5kKCJpbWFnZSIsIHgsIHgubmFtZSkKICAgICAgICAgIH0pCiAgICAgICAgICBheGlvcz8/Py5wb3N0KGZkKTsgKENvbmZ1c2VkIGhlcmUsIC50aGVuPz8/KQogICAgICAgICAgICAgICAqLwogICAgfSwKICAgIG9uVmlkZW9VcGxvYWQ6IGZ1bmN0aW9uIG9uVmlkZW9VcGxvYWQoKSB7CiAgICAgIC8qIFNvbWV0aGluZyBoZXJlIHRvIHVwbG9hZCBhbGwgaW1hZ2VzIGluIHRoaXMuZmlsZXMgKi8KCiAgICAgIC8qICBjb25zdCBmZCA9IG5ldyBmb3JtRGF0YSgpIAogICAgICAgICAgdGhpcy52aWRlb3MuZm9yRWFjaCh4IC0+IHsKICAgICAgICAgICAgZmQuYXBwZW5kKCJpbWFnZSIsIHgsIHgubmFtZSkKICAgICAgICAgIH0pCiAgICAgICAgICBheGlvcz8/Py5wb3N0KGZkKTsgKENvbmZ1c2VkIGhlcmUsIC50aGVuPz8/KQogICAgICAgICAgICAgICAqLwogICAgfQogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAHA;AAIA,IAAA,gBAJA,8BAIA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,GAAA,CAAA;AACA;AANA,GAPA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,KADA,EACA;AAAA;;AACA,MAAA,KAAA,CACA,IADA,CACA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EADA,EAEA,GAFA,CAEA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAJA;AAKA,KAPA;AAQA,IAAA,aARA,yBAQA,KARA,EAQA;AAAA;;AACA,MAAA,KAAA,CACA,IADA,CACA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EADA,EAEA,GAFA,CAEA,UAAA,CAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAJA;AAKA,KAdA;AAeA,IAAA,aAfA,2BAeA;AACA;;AACA;;;;;;AAMA,KAvBA;AAwBA,IAAA,aAxBA,2BAwBA;AACA;;AACA;;;;;;AAMA;AAhCA;AAfA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <h1 style=\"text-align:center\">aMGS Image and Video Upload Tool</h1>\n      <img class=\"center\" src=\"./assets/Mouse.jpeg\">\n    </div>\n    <form class=\"split left center\">\n      <h3>Images:</h3>\n      <input type=\"file\" accept=\"image/*\" @change=\"onImageChosen\" multiple><br>\n      <button @click=\"onImageUpload\">\n        <p v-if=\"isMultipleImages\">Upload Images</p>\n        <p v-else>Upload Image</p>\n      </button>\n    </form>\n    <form class=\"split right center\">\n      <h3>Videos:</h3>\n      <input type=\"file\" accept=\"video/*\" @change=\"onVideoChosen\" multiple><br>\n      <button @click=\"onVideoUpload\">\n        <p v-if=\"isMultipleVideos\">Upload Videos</p>\n        <p v-else>Upload Video</p>\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        images: [],\n        videos: []\n      }\n    },\n    computed: {\n      isMultipleImages() {\n        return this.images.length > 1;\n      },\n      isMultipleVideos() {\n        return this.videos.length > 1;\n      }\n    },\n    methods: {\n      onImageChosen(event) {\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            this.images.push(event.target.files[x]);\n          });\n      },\n      onVideoChosen(event) {\n        Array\n          .from(Array(event.target.files.length).keys())\n          .map(x => {\n            this.videos.push(event.target.files[x]);\n          });\n      },\n      onImageUpload() {\n        /* Something here to upload all images in this.files */\n        /*  const fd = new formData() \n            this.images.forEach(x -> {\n              fd.append(\"image\", x, x.name)\n            })\n            axios???.post(fd); (Confused here, .then???)\n                 */\n      },\n      onVideoUpload() {\n        /* Something here to upload all images in this.files */\n        /*  const fd = new formData() \n            this.videos.forEach(x -> {\n              fd.append(\"image\", x, x.name)\n            })\n            axios???.post(fd); (Confused here, .then???)\n                 */\n      }\n    }\n  }\n</script>\n\n<style>\n  .split {\n  height: 100%;\n  width: 50%;\n  position: fixed;\n  z-index: 1;\n  overflow-x: hidden;\n  padding-top: 20px;\n  background-color: rgb(149, 214, 240);\n  } \n\n/* Control the left side */\n.left {\n  left: 0;\n  top: 200;\n  }\n\n\n/* Control the right side */\n.right {\n  right: 0;\n  top: 200;\n }\n  body{\n    background-color: rgb(149, 214, 240);\n  }\n  /*\n  form{\n    margin-top: -100px;\n    margin-left: -250px;\n    width: 500px;\n    height: 200px;\n    border: 4px dashed #fff;\n  }\n  form p{\n    line-height: 170px;\n    color: #ffffff;\n    font-family: Arial;\n  }\n  form input{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n  }\n  form button{\n    margin: 0;\n    color: #fff;\n    background: #16a085;\n    border: none;\n    width: 508px;\n    height: 35px;\n    margin-top: -20px;\n    margin-left: -4px;\n    border-radius: 4px;\n    border-bottom: 4px solid #117A60;\n    transition: all .2s ease;\n    outline: none;\n  }\n  form button:hover{\n    background: #149174;\n    color: #0C5645;\n  }\n  form button:active{\n    border:0;\n  } */\n  .center {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>"],"sourceRoot":"src"}]}